// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dice.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/hexagram30/protocols/src/golang/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// RollRequest
type RollRequest struct {
	DiceType             string   `protobuf:"bytes,1,opt,name=diceType,proto3" json:"dice-type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollRequest) Reset()         { *m = RollRequest{} }
func (m *RollRequest) String() string { return proto.CompactTextString(m) }
func (*RollRequest) ProtoMessage()    {}
func (*RollRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{0}
}

func (m *RollRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollRequest.Unmarshal(m, b)
}
func (m *RollRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollRequest.Marshal(b, m, deterministic)
}
func (m *RollRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollRequest.Merge(m, src)
}
func (m *RollRequest) XXX_Size() int {
	return xxx_messageInfo_RollRequest.Size(m)
}
func (m *RollRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollRequest proto.InternalMessageInfo

func (m *RollRequest) GetDiceType() string {
	if m != nil {
		return m.DiceType
	}
	return ""
}

// RollsRequest
type RollsRequest struct {
	DiceType             string   `protobuf:"bytes,1,opt,name=diceType,proto3" json:"dice-type,omitempty"`
	RollCount            int32    `protobuf:"varint,2,opt,name=rollCount,proto3" json:"rollCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollsRequest) Reset()         { *m = RollsRequest{} }
func (m *RollsRequest) String() string { return proto.CompactTextString(m) }
func (*RollsRequest) ProtoMessage()    {}
func (*RollsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{1}
}

func (m *RollsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollsRequest.Unmarshal(m, b)
}
func (m *RollsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollsRequest.Marshal(b, m, deterministic)
}
func (m *RollsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollsRequest.Merge(m, src)
}
func (m *RollsRequest) XXX_Size() int {
	return xxx_messageInfo_RollsRequest.Size(m)
}
func (m *RollsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollsRequest proto.InternalMessageInfo

func (m *RollsRequest) GetDiceType() string {
	if m != nil {
		return m.DiceType
	}
	return ""
}

func (m *RollsRequest) GetRollCount() int32 {
	if m != nil {
		return m.RollCount
	}
	return 0
}

// RollVariousRequest
type RollVariousRequest struct {
	Rolls                []*RollsRequest `protobuf:"bytes,1,rep,name=rolls,proto3" json:"rolls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RollVariousRequest) Reset()         { *m = RollVariousRequest{} }
func (m *RollVariousRequest) String() string { return proto.CompactTextString(m) }
func (*RollVariousRequest) ProtoMessage()    {}
func (*RollVariousRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{2}
}

func (m *RollVariousRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollVariousRequest.Unmarshal(m, b)
}
func (m *RollVariousRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollVariousRequest.Marshal(b, m, deterministic)
}
func (m *RollVariousRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollVariousRequest.Merge(m, src)
}
func (m *RollVariousRequest) XXX_Size() int {
	return xxx_messageInfo_RollVariousRequest.Size(m)
}
func (m *RollVariousRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollVariousRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollVariousRequest proto.InternalMessageInfo

func (m *RollVariousRequest) GetRolls() []*RollsRequest {
	if m != nil {
		return m.Rolls
	}
	return nil
}

// DiceRoll
type DiceRoll struct {
	DiceType             string   `protobuf:"bytes,1,opt,name=diceType,proto3" json:"dice-type,omitempty"`
	Result               int32    `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiceRoll) Reset()         { *m = DiceRoll{} }
func (m *DiceRoll) String() string { return proto.CompactTextString(m) }
func (*DiceRoll) ProtoMessage()    {}
func (*DiceRoll) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{3}
}

func (m *DiceRoll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiceRoll.Unmarshal(m, b)
}
func (m *DiceRoll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiceRoll.Marshal(b, m, deterministic)
}
func (m *DiceRoll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiceRoll.Merge(m, src)
}
func (m *DiceRoll) XXX_Size() int {
	return xxx_messageInfo_DiceRoll.Size(m)
}
func (m *DiceRoll) XXX_DiscardUnknown() {
	xxx_messageInfo_DiceRoll.DiscardUnknown(m)
}

var xxx_messageInfo_DiceRoll proto.InternalMessageInfo

func (m *DiceRoll) GetDiceType() string {
	if m != nil {
		return m.DiceType
	}
	return ""
}

func (m *DiceRoll) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

// DiceRepeatedRolls
type DiceRepeatedRolls struct {
	DiceType             string   `protobuf:"bytes,1,opt,name=diceType,proto3" json:"dice-type,omitempty"`
	Results              []int32  `protobuf:"varint,2,rep,packed,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiceRepeatedRolls) Reset()         { *m = DiceRepeatedRolls{} }
func (m *DiceRepeatedRolls) String() string { return proto.CompactTextString(m) }
func (*DiceRepeatedRolls) ProtoMessage()    {}
func (*DiceRepeatedRolls) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{4}
}

func (m *DiceRepeatedRolls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiceRepeatedRolls.Unmarshal(m, b)
}
func (m *DiceRepeatedRolls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiceRepeatedRolls.Marshal(b, m, deterministic)
}
func (m *DiceRepeatedRolls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiceRepeatedRolls.Merge(m, src)
}
func (m *DiceRepeatedRolls) XXX_Size() int {
	return xxx_messageInfo_DiceRepeatedRolls.Size(m)
}
func (m *DiceRepeatedRolls) XXX_DiscardUnknown() {
	xxx_messageInfo_DiceRepeatedRolls.DiscardUnknown(m)
}

var xxx_messageInfo_DiceRepeatedRolls proto.InternalMessageInfo

func (m *DiceRepeatedRolls) GetDiceType() string {
	if m != nil {
		return m.DiceType
	}
	return ""
}

func (m *DiceRepeatedRolls) GetResults() []int32 {
	if m != nil {
		return m.Results
	}
	return nil
}

// DiceVariousRolls
type DiceVariousRolls struct {
	Results              []*DiceRepeatedRolls `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DiceVariousRolls) Reset()         { *m = DiceVariousRolls{} }
func (m *DiceVariousRolls) String() string { return proto.CompactTextString(m) }
func (*DiceVariousRolls) ProtoMessage()    {}
func (*DiceVariousRolls) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{5}
}

func (m *DiceVariousRolls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiceVariousRolls.Unmarshal(m, b)
}
func (m *DiceVariousRolls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiceVariousRolls.Marshal(b, m, deterministic)
}
func (m *DiceVariousRolls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiceVariousRolls.Merge(m, src)
}
func (m *DiceVariousRolls) XXX_Size() int {
	return xxx_messageInfo_DiceVariousRolls.Size(m)
}
func (m *DiceVariousRolls) XXX_DiscardUnknown() {
	xxx_messageInfo_DiceVariousRolls.DiscardUnknown(m)
}

var xxx_messageInfo_DiceVariousRolls proto.InternalMessageInfo

func (m *DiceVariousRolls) GetResults() []*DiceRepeatedRolls {
	if m != nil {
		return m.Results
	}
	return nil
}

// DiceRollStats
type DiceRollStats struct {
	Average              float32  `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
	High                 int32    `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	Low                  int32    `protobuf:"varint,3,opt,name=low,proto3" json:"low,omitempty"`
	Sum                  int32    `protobuf:"varint,4,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiceRollStats) Reset()         { *m = DiceRollStats{} }
func (m *DiceRollStats) String() string { return proto.CompactTextString(m) }
func (*DiceRollStats) ProtoMessage()    {}
func (*DiceRollStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{6}
}

func (m *DiceRollStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiceRollStats.Unmarshal(m, b)
}
func (m *DiceRollStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiceRollStats.Marshal(b, m, deterministic)
}
func (m *DiceRollStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiceRollStats.Merge(m, src)
}
func (m *DiceRollStats) XXX_Size() int {
	return xxx_messageInfo_DiceRollStats.Size(m)
}
func (m *DiceRollStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DiceRollStats.DiscardUnknown(m)
}

var xxx_messageInfo_DiceRollStats proto.InternalMessageInfo

func (m *DiceRollStats) GetAverage() float32 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *DiceRollStats) GetHigh() int32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *DiceRollStats) GetLow() int32 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *DiceRollStats) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

// MetaRoll
type MetaRoll struct {
	Roll                 *DiceRoll          `protobuf:"bytes,1,opt,name=roll,proto3" json:"roll,omitempty"`
	Rolls                *DiceRepeatedRolls `protobuf:"bytes,2,opt,name=rolls,proto3" json:"rolls,omitempty"`
	Stats                *DiceRollStats     `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MetaRoll) Reset()         { *m = MetaRoll{} }
func (m *MetaRoll) String() string { return proto.CompactTextString(m) }
func (*MetaRoll) ProtoMessage()    {}
func (*MetaRoll) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{7}
}

func (m *MetaRoll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaRoll.Unmarshal(m, b)
}
func (m *MetaRoll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaRoll.Marshal(b, m, deterministic)
}
func (m *MetaRoll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaRoll.Merge(m, src)
}
func (m *MetaRoll) XXX_Size() int {
	return xxx_messageInfo_MetaRoll.Size(m)
}
func (m *MetaRoll) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaRoll.DiscardUnknown(m)
}

var xxx_messageInfo_MetaRoll proto.InternalMessageInfo

func (m *MetaRoll) GetRoll() *DiceRoll {
	if m != nil {
		return m.Roll
	}
	return nil
}

func (m *MetaRoll) GetRolls() *DiceRepeatedRolls {
	if m != nil {
		return m.Rolls
	}
	return nil
}

func (m *MetaRoll) GetStats() *DiceRollStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

// MetaRolls
type MetaRolls struct {
	Results              []*MetaRoll `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MetaRolls) Reset()         { *m = MetaRolls{} }
func (m *MetaRolls) String() string { return proto.CompactTextString(m) }
func (*MetaRolls) ProtoMessage()    {}
func (*MetaRolls) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{8}
}

func (m *MetaRolls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaRolls.Unmarshal(m, b)
}
func (m *MetaRolls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaRolls.Marshal(b, m, deterministic)
}
func (m *MetaRolls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaRolls.Merge(m, src)
}
func (m *MetaRolls) XXX_Size() int {
	return xxx_messageInfo_MetaRolls.Size(m)
}
func (m *MetaRolls) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaRolls.DiscardUnknown(m)
}

var xxx_messageInfo_MetaRolls proto.InternalMessageInfo

func (m *MetaRolls) GetResults() []*MetaRoll {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*RollRequest)(nil), "api.RollRequest")
	proto.RegisterType((*RollsRequest)(nil), "api.RollsRequest")
	proto.RegisterType((*RollVariousRequest)(nil), "api.RollVariousRequest")
	proto.RegisterType((*DiceRoll)(nil), "api.DiceRoll")
	proto.RegisterType((*DiceRepeatedRolls)(nil), "api.DiceRepeatedRolls")
	proto.RegisterType((*DiceVariousRolls)(nil), "api.DiceVariousRolls")
	proto.RegisterType((*DiceRollStats)(nil), "api.DiceRollStats")
	proto.RegisterType((*MetaRoll)(nil), "api.MetaRoll")
	proto.RegisterType((*MetaRolls)(nil), "api.MetaRolls")
}

func init() { proto.RegisterFile("dice.proto", fileDescriptor_b290fdc790cf24c0) }

var fileDescriptor_b290fdc790cf24c0 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0x8d, 0xe3, 0xa4, 0x4d, 0x26, 0xed, 0xf7, 0x25, 0x03, 0x04, 0x2b, 0xe2, 0x22, 0xac, 0x90,
	0x1a, 0x24, 0x70, 0xa2, 0x04, 0x55, 0x42, 0xfc, 0x89, 0x92, 0x0b, 0x7a, 0x81, 0x88, 0x5c, 0xd4,
	0xfb, 0x8d, 0xbb, 0x72, 0x2c, 0xd9, 0x5e, 0xe3, 0xb5, 0x4b, 0xfb, 0x00, 0xbc, 0x05, 0x0f, 0x8b,
	0x76, 0xd7, 0xeb, 0xd4, 0x44, 0x0d, 0xdc, 0xed, 0xcc, 0xce, 0x9c, 0x39, 0x73, 0x7c, 0xbc, 0x00,
	0x57, 0xa1, 0xcf, 0xdc, 0x34, 0xe3, 0x39, 0x47, 0x9b, 0xa6, 0xe1, 0xe8, 0x34, 0x08, 0xf3, 0x4d,
	0xb1, 0x76, 0x7d, 0x1e, 0x4f, 0x37, 0xec, 0x86, 0x06, 0x19, 0x8d, 0x17, 0xb3, 0xa9, 0xaa, 0xf0,
	0x79, 0x24, 0xa6, 0x22, 0xf3, 0x75, 0x34, 0xf5, 0x79, 0x1c, 0xf3, 0x44, 0x37, 0x93, 0xe7, 0xd0,
	0xf3, 0x78, 0x14, 0x79, 0xec, 0x7b, 0xc1, 0x44, 0x8e, 0x23, 0xe8, 0x48, 0xe4, 0x6f, 0xb7, 0x29,
	0x73, 0xac, 0xb1, 0x35, 0xe9, 0x7a, 0x55, 0x4c, 0x3e, 0xc3, 0x91, 0x2c, 0x15, 0xff, 0x50, 0x8b,
	0x4f, 0xa0, 0x9b, 0xf1, 0x28, 0xfa, 0xc4, 0x8b, 0x24, 0x77, 0x9a, 0x63, 0x6b, 0xd2, 0xf6, 0xb6,
	0x09, 0xf2, 0x0e, 0x50, 0x22, 0x5d, 0xd2, 0x2c, 0xe4, 0x45, 0x85, 0x77, 0x02, 0x6d, 0x59, 0x22,
	0x1c, 0x6b, 0x6c, 0x4f, 0x7a, 0xf3, 0x81, 0x4b, 0xd3, 0xd0, 0xbd, 0x3b, 0xd1, 0xd3, 0xf7, 0xe4,
	0x3d, 0x74, 0x96, 0xa1, 0xcf, 0xe4, 0xd5, 0x5e, 0x12, 0x43, 0x38, 0xc8, 0x98, 0x28, 0x22, 0xc3,
	0xa0, 0x8c, 0xc8, 0x39, 0x0c, 0x54, 0x3f, 0x4b, 0x19, 0xcd, 0xd9, 0x95, 0x1a, 0xb1, 0x17, 0xc8,
	0x81, 0x43, 0xdd, 0x2a, 0x9c, 0xe6, 0xd8, 0x9e, 0xb4, 0x3d, 0x13, 0x92, 0x25, 0xf4, 0x25, 0x94,
	0xd9, 0x44, 0x21, 0xcd, 0xb6, 0xd5, 0x7a, 0x93, 0xa1, 0xda, 0x64, 0x67, 0xe4, 0x16, 0x85, 0xc2,
	0xb1, 0x59, 0xe8, 0x22, 0xa7, 0xb9, 0x90, 0x03, 0xe9, 0x35, 0xcb, 0x68, 0xa0, 0xb9, 0x34, 0x3d,
	0x13, 0x22, 0x42, 0x6b, 0x13, 0x06, 0x9b, 0x72, 0x23, 0x75, 0xc6, 0x3e, 0xd8, 0x11, 0xff, 0xe1,
	0xd8, 0x2a, 0x25, 0x8f, 0x32, 0x23, 0x8a, 0xd8, 0x69, 0xe9, 0x8c, 0x28, 0x62, 0xf2, 0xd3, 0x82,
	0xce, 0x17, 0x96, 0x53, 0x25, 0xda, 0x53, 0x68, 0x49, 0x25, 0x15, 0x76, 0x6f, 0x7e, 0xbc, 0xa5,
	0x27, 0x9d, 0xa0, 0xae, 0xf0, 0x85, 0xf9, 0x18, 0x4d, 0x55, 0x73, 0xdf, 0x0a, 0xba, 0x08, 0x27,
	0xd0, 0x16, 0x92, 0xb8, 0xe2, 0xd0, 0x9b, 0x63, 0x0d, 0x51, 0xad, 0xe4, 0xe9, 0x02, 0xf2, 0x0a,
	0xba, 0x86, 0x86, 0xc0, 0x93, 0x3f, 0x95, 0xd2, 0x54, 0x4c, 0x41, 0x25, 0xd0, 0xfc, 0x97, 0x0d,
	0x70, 0xc1, 0xb2, 0xeb, 0xd0, 0x67, 0x1f, 0x57, 0xe7, 0x38, 0x83, 0xd6, 0x2a, 0x4c, 0x02, 0x7c,
	0xe0, 0x96, 0x5e, 0x96, 0x51, 0x69, 0x92, 0xd1, 0xa0, 0x9e, 0x4c, 0xa3, 0x5b, 0xd2, 0xc0, 0x97,
	0xd0, 0x91, 0x88, 0x5f, 0x13, 0x9f, 0x61, 0xbf, 0x32, 0x96, 0x69, 0xa9, 0x2b, 0x40, 0x1a, 0xf8,
	0x46, 0x5b, 0xdd, 0xec, 0x8a, 0xbb, 0x5e, 0x1c, 0xdd, 0xa3, 0x08, 0x69, 0xe0, 0x07, 0xfd, 0x4b,
	0x95, 0x9e, 0xc0, 0xc7, 0x55, 0x6f, 0xdd, 0xef, 0xa3, 0x47, 0x15, 0xc2, 0x5d, 0xfb, 0x90, 0x06,
	0x9e, 0x42, 0x5f, 0x1e, 0x95, 0x0c, 0x7b, 0x18, 0xd4, 0xc5, 0x22, 0x0d, 0x7c, 0x0b, 0xff, 0x9b,
	0xbe, 0xbf, 0x0e, 0xff, 0xaf, 0xd6, 0x2c, 0xa7, 0xbe, 0x86, 0xc3, 0x4b, 0x96, 0x89, 0x90, 0x27,
	0x38, 0x34, 0x12, 0x96, 0x09, 0xd3, 0xf4, 0x70, 0x27, 0xaf, 0xd4, 0x3d, 0x7b, 0x06, 0xb8, 0xb9,
	0x09, 0xe2, 0xc5, 0xcc, 0xd5, 0xcf, 0xd2, 0x5a, 0x82, 0x9f, 0x1d, 0x2d, 0xf5, 0xe7, 0x5a, 0xc9,
	0x87, 0x66, 0x65, 0xad, 0x0f, 0xd4, 0x8b, 0xb3, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x04, 0xb3,
	0x2e, 0x14, 0xbc, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceAPIClient is the client API for ServiceAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceAPIClient interface {
	// Return "pong" for "ping"
	Ping(ctx context.Context, in *proto1.PingRequest, opts ...grpc.CallOption) (*proto1.PingReply, error)
	// Dice-rolling API: some notes on the API methods:
	// * Roll - a single roll
	// * RollN - multiple roles of a single type of dice
	// * RollVarious - multiple rolls supporting different types of dice
	// * RollNMeta - multiple rolls of a single type of dice with stats
	//   included in the results
	// * RollVariousMeta - multiple rolls supporting different types of
	//   dice with stats included in the results
	RollOnce(ctx context.Context, in *RollRequest, opts ...grpc.CallOption) (*DiceRoll, error)
	RollRepeated(ctx context.Context, in *RollsRequest, opts ...grpc.CallOption) (*DiceRepeatedRolls, error)
	RollVarious(ctx context.Context, in *RollVariousRequest, opts ...grpc.CallOption) (*DiceVariousRolls, error)
	RollMetaRepeated(ctx context.Context, in *RollsRequest, opts ...grpc.CallOption) (*MetaRoll, error)
	RollMetaVarious(ctx context.Context, in *RollVariousRequest, opts ...grpc.CallOption) (*MetaRolls, error)
	// Get version data
	Version(ctx context.Context, in *proto1.VersionRequest, opts ...grpc.CallOption) (*proto1.VersionReply, error)
}

type serviceAPIClient struct {
	cc *grpc.ClientConn
}

func NewServiceAPIClient(cc *grpc.ClientConn) ServiceAPIClient {
	return &serviceAPIClient{cc}
}

func (c *serviceAPIClient) Ping(ctx context.Context, in *proto1.PingRequest, opts ...grpc.CallOption) (*proto1.PingReply, error) {
	out := new(proto1.PingReply)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) RollOnce(ctx context.Context, in *RollRequest, opts ...grpc.CallOption) (*DiceRoll, error) {
	out := new(DiceRoll)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/RollOnce", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) RollRepeated(ctx context.Context, in *RollsRequest, opts ...grpc.CallOption) (*DiceRepeatedRolls, error) {
	out := new(DiceRepeatedRolls)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/RollRepeated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) RollVarious(ctx context.Context, in *RollVariousRequest, opts ...grpc.CallOption) (*DiceVariousRolls, error) {
	out := new(DiceVariousRolls)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/RollVarious", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) RollMetaRepeated(ctx context.Context, in *RollsRequest, opts ...grpc.CallOption) (*MetaRoll, error) {
	out := new(MetaRoll)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/RollMetaRepeated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) RollMetaVarious(ctx context.Context, in *RollVariousRequest, opts ...grpc.CallOption) (*MetaRolls, error) {
	out := new(MetaRolls)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/RollMetaVarious", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAPIClient) Version(ctx context.Context, in *proto1.VersionRequest, opts ...grpc.CallOption) (*proto1.VersionReply, error) {
	out := new(proto1.VersionReply)
	err := c.cc.Invoke(ctx, "/api.ServiceAPI/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceAPIServer is the server API for ServiceAPI service.
type ServiceAPIServer interface {
	// Return "pong" for "ping"
	Ping(context.Context, *proto1.PingRequest) (*proto1.PingReply, error)
	// Dice-rolling API: some notes on the API methods:
	// * Roll - a single roll
	// * RollN - multiple roles of a single type of dice
	// * RollVarious - multiple rolls supporting different types of dice
	// * RollNMeta - multiple rolls of a single type of dice with stats
	//   included in the results
	// * RollVariousMeta - multiple rolls supporting different types of
	//   dice with stats included in the results
	RollOnce(context.Context, *RollRequest) (*DiceRoll, error)
	RollRepeated(context.Context, *RollsRequest) (*DiceRepeatedRolls, error)
	RollVarious(context.Context, *RollVariousRequest) (*DiceVariousRolls, error)
	RollMetaRepeated(context.Context, *RollsRequest) (*MetaRoll, error)
	RollMetaVarious(context.Context, *RollVariousRequest) (*MetaRolls, error)
	// Get version data
	Version(context.Context, *proto1.VersionRequest) (*proto1.VersionReply, error)
}

// UnimplementedServiceAPIServer can be embedded to have forward compatible implementations.
type UnimplementedServiceAPIServer struct {
}

func (*UnimplementedServiceAPIServer) Ping(ctx context.Context, req *proto1.PingRequest) (*proto1.PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedServiceAPIServer) RollOnce(ctx context.Context, req *RollRequest) (*DiceRoll, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollOnce not implemented")
}
func (*UnimplementedServiceAPIServer) RollRepeated(ctx context.Context, req *RollsRequest) (*DiceRepeatedRolls, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollRepeated not implemented")
}
func (*UnimplementedServiceAPIServer) RollVarious(ctx context.Context, req *RollVariousRequest) (*DiceVariousRolls, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollVarious not implemented")
}
func (*UnimplementedServiceAPIServer) RollMetaRepeated(ctx context.Context, req *RollsRequest) (*MetaRoll, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollMetaRepeated not implemented")
}
func (*UnimplementedServiceAPIServer) RollMetaVarious(ctx context.Context, req *RollVariousRequest) (*MetaRolls, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollMetaVarious not implemented")
}
func (*UnimplementedServiceAPIServer) Version(ctx context.Context, req *proto1.VersionRequest) (*proto1.VersionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}

func RegisterServiceAPIServer(s *grpc.Server, srv ServiceAPIServer) {
	s.RegisterService(&_ServiceAPI_serviceDesc, srv)
}

func _ServiceAPI_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).Ping(ctx, req.(*proto1.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_RollOnce_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).RollOnce(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/RollOnce",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).RollOnce(ctx, req.(*RollRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_RollRepeated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).RollRepeated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/RollRepeated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).RollRepeated(ctx, req.(*RollsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_RollVarious_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollVariousRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).RollVarious(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/RollVarious",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).RollVarious(ctx, req.(*RollVariousRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_RollMetaRepeated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).RollMetaRepeated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/RollMetaRepeated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).RollMetaRepeated(ctx, req.(*RollsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_RollMetaVarious_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollVariousRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).RollMetaVarious(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/RollMetaVarious",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).RollMetaVarious(ctx, req.(*RollVariousRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceAPI_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceAPIServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ServiceAPI/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceAPIServer).Version(ctx, req.(*proto1.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ServiceAPI",
	HandlerType: (*ServiceAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ServiceAPI_Ping_Handler,
		},
		{
			MethodName: "RollOnce",
			Handler:    _ServiceAPI_RollOnce_Handler,
		},
		{
			MethodName: "RollRepeated",
			Handler:    _ServiceAPI_RollRepeated_Handler,
		},
		{
			MethodName: "RollVarious",
			Handler:    _ServiceAPI_RollVarious_Handler,
		},
		{
			MethodName: "RollMetaRepeated",
			Handler:    _ServiceAPI_RollMetaRepeated_Handler,
		},
		{
			MethodName: "RollMetaVarious",
			Handler:    _ServiceAPI_RollMetaVarious_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _ServiceAPI_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dice.proto",
}
