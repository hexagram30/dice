// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dice.proto

package hxgm30.dice.pb.api;

/**
 * <pre>
 * DiceRepeatedRolls
 * </pre>
 *
 * Protobuf type {@code api.DiceRepeatedRolls}
 */
public  final class DiceRepeatedRolls extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.DiceRepeatedRolls)
    DiceRepeatedRollsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DiceRepeatedRolls.newBuilder() to construct.
  private DiceRepeatedRolls(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DiceRepeatedRolls() {
    diceType_ = "";
    results_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DiceRepeatedRolls();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DiceRepeatedRolls(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            diceType_ = s;
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              results_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            results_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              results_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              results_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        results_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return hxgm30.dice.pb.api.DiceAPIProto.internal_static_api_DiceRepeatedRolls_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return hxgm30.dice.pb.api.DiceAPIProto.internal_static_api_DiceRepeatedRolls_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            hxgm30.dice.pb.api.DiceRepeatedRolls.class, hxgm30.dice.pb.api.DiceRepeatedRolls.Builder.class);
  }

  public static final int DICETYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object diceType_;
  /**
   * <code>string diceType = 1;</code>
   * @return The diceType.
   */
  public java.lang.String getDiceType() {
    java.lang.Object ref = diceType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      diceType_ = s;
      return s;
    }
  }
  /**
   * <code>string diceType = 1;</code>
   * @return The bytes for diceType.
   */
  public com.google.protobuf.ByteString
      getDiceTypeBytes() {
    java.lang.Object ref = diceType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      diceType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESULTS_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList results_;
  /**
   * <code>repeated int32 results = 2;</code>
   * @return A list containing the results.
   */
  public java.util.List<java.lang.Integer>
      getResultsList() {
    return results_;
  }
  /**
   * <code>repeated int32 results = 2;</code>
   * @return The count of results.
   */
  public int getResultsCount() {
    return results_.size();
  }
  /**
   * <code>repeated int32 results = 2;</code>
   * @param index The index of the element to return.
   * @return The results at the given index.
   */
  public int getResults(int index) {
    return results_.getInt(index);
  }
  private int resultsMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getDiceTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, diceType_);
    }
    if (getResultsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(resultsMemoizedSerializedSize);
    }
    for (int i = 0; i < results_.size(); i++) {
      output.writeInt32NoTag(results_.getInt(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDiceTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, diceType_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < results_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(results_.getInt(i));
      }
      size += dataSize;
      if (!getResultsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      resultsMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof hxgm30.dice.pb.api.DiceRepeatedRolls)) {
      return super.equals(obj);
    }
    hxgm30.dice.pb.api.DiceRepeatedRolls other = (hxgm30.dice.pb.api.DiceRepeatedRolls) obj;

    if (!getDiceType()
        .equals(other.getDiceType())) return false;
    if (!getResultsList()
        .equals(other.getResultsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DICETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getDiceType().hashCode();
    if (getResultsCount() > 0) {
      hash = (37 * hash) + RESULTS_FIELD_NUMBER;
      hash = (53 * hash) + getResultsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static hxgm30.dice.pb.api.DiceRepeatedRolls parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(hxgm30.dice.pb.api.DiceRepeatedRolls prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DiceRepeatedRolls
   * </pre>
   *
   * Protobuf type {@code api.DiceRepeatedRolls}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.DiceRepeatedRolls)
      hxgm30.dice.pb.api.DiceRepeatedRollsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hxgm30.dice.pb.api.DiceAPIProto.internal_static_api_DiceRepeatedRolls_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hxgm30.dice.pb.api.DiceAPIProto.internal_static_api_DiceRepeatedRolls_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hxgm30.dice.pb.api.DiceRepeatedRolls.class, hxgm30.dice.pb.api.DiceRepeatedRolls.Builder.class);
    }

    // Construct using hxgm30.dice.pb.api.DiceRepeatedRolls.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      diceType_ = "";

      results_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return hxgm30.dice.pb.api.DiceAPIProto.internal_static_api_DiceRepeatedRolls_descriptor;
    }

    @java.lang.Override
    public hxgm30.dice.pb.api.DiceRepeatedRolls getDefaultInstanceForType() {
      return hxgm30.dice.pb.api.DiceRepeatedRolls.getDefaultInstance();
    }

    @java.lang.Override
    public hxgm30.dice.pb.api.DiceRepeatedRolls build() {
      hxgm30.dice.pb.api.DiceRepeatedRolls result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public hxgm30.dice.pb.api.DiceRepeatedRolls buildPartial() {
      hxgm30.dice.pb.api.DiceRepeatedRolls result = new hxgm30.dice.pb.api.DiceRepeatedRolls(this);
      int from_bitField0_ = bitField0_;
      result.diceType_ = diceType_;
      if (((bitField0_ & 0x00000001) != 0)) {
        results_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.results_ = results_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof hxgm30.dice.pb.api.DiceRepeatedRolls) {
        return mergeFrom((hxgm30.dice.pb.api.DiceRepeatedRolls)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(hxgm30.dice.pb.api.DiceRepeatedRolls other) {
      if (other == hxgm30.dice.pb.api.DiceRepeatedRolls.getDefaultInstance()) return this;
      if (!other.getDiceType().isEmpty()) {
        diceType_ = other.diceType_;
        onChanged();
      }
      if (!other.results_.isEmpty()) {
        if (results_.isEmpty()) {
          results_ = other.results_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureResultsIsMutable();
          results_.addAll(other.results_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      hxgm30.dice.pb.api.DiceRepeatedRolls parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (hxgm30.dice.pb.api.DiceRepeatedRolls) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object diceType_ = "";
    /**
     * <code>string diceType = 1;</code>
     * @return The diceType.
     */
    public java.lang.String getDiceType() {
      java.lang.Object ref = diceType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        diceType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string diceType = 1;</code>
     * @return The bytes for diceType.
     */
    public com.google.protobuf.ByteString
        getDiceTypeBytes() {
      java.lang.Object ref = diceType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        diceType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string diceType = 1;</code>
     * @param value The diceType to set.
     * @return This builder for chaining.
     */
    public Builder setDiceType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      diceType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string diceType = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiceType() {
      
      diceType_ = getDefaultInstance().getDiceType();
      onChanged();
      return this;
    }
    /**
     * <code>string diceType = 1;</code>
     * @param value The bytes for diceType to set.
     * @return This builder for chaining.
     */
    public Builder setDiceTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      diceType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList results_ = emptyIntList();
    private void ensureResultsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        results_ = mutableCopy(results_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @return A list containing the results.
     */
    public java.util.List<java.lang.Integer>
        getResultsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(results_) : results_;
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @return The count of results.
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @param index The index of the element to return.
     * @return The results at the given index.
     */
    public int getResults(int index) {
      return results_.getInt(index);
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @param index The index to set the value at.
     * @param value The results to set.
     * @return This builder for chaining.
     */
    public Builder setResults(
        int index, int value) {
      ensureResultsIsMutable();
      results_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @param value The results to add.
     * @return This builder for chaining.
     */
    public Builder addResults(int value) {
      ensureResultsIsMutable();
      results_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @param values The results to add.
     * @return This builder for chaining.
     */
    public Builder addAllResults(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureResultsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, results_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 results = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearResults() {
      results_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.DiceRepeatedRolls)
  }

  // @@protoc_insertion_point(class_scope:api.DiceRepeatedRolls)
  private static final hxgm30.dice.pb.api.DiceRepeatedRolls DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new hxgm30.dice.pb.api.DiceRepeatedRolls();
  }

  public static hxgm30.dice.pb.api.DiceRepeatedRolls getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DiceRepeatedRolls>
      PARSER = new com.google.protobuf.AbstractParser<DiceRepeatedRolls>() {
    @java.lang.Override
    public DiceRepeatedRolls parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DiceRepeatedRolls(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DiceRepeatedRolls> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DiceRepeatedRolls> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public hxgm30.dice.pb.api.DiceRepeatedRolls getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

