syntax = "proto3";

option java_multiple_files = true;
option java_package = "hxgm30.dice.pb.api";
option java_outer_classname = "DiceAPIProto";

package api;

service ServiceAPI {
    // Return "pong" for "ping"
    rpc Ping(PingRequest) returns (PingReply) {}
    // Dice-rolling API: some notes on the API methods:
    // * Roll - a single roll
    // * RollN - multiple roles of a single type of dice
    // * RollVarious - multiple rolls supporting different types of dice
    // * RollNMeta - multiple rolls of a single type of dice with stats
    //   included in the results
    // * RollVariousMeta - multiple rolls supporting different types of
    //   dice with stats included in the results
    rpc Roll(RollRequest) returns (DiceRoll) {}
    rpc RollN(RollsRequest) returns (DiceRolls) {}
    rpc RollVarious(RollVariousRequest) returns (VariousDiceRolls) {}
    rpc RollNMeta(RollsRequest) returns (MetaRoll) {}
    rpc RollVariousMeta(RollVariousRequest) returns (MetaRolls) {}
    // Get version data
    rpc Version(VersionRequest) returns (VersionReply) {}
}

// PingRequest ...
message PingRequest {
    string data = 1;
}

// PingReply ...
message PingReply {
    string data = 1;
}

// RollRequest
message RollRequest {
    string diceType = 1;
}

// RollsRequest
message RollsRequest {
    string diceType = 1;
    int32 rollCount = 2;
}

// RollVariousRequest
message RollVariousRequest {
    repeated RollsRequest rolls = 1;
}

// DiceRoll
message DiceRoll {
    string diceType = 1;
    int32 result = 2;
}

// DiceRolls
message DiceRolls {
    repeated DiceRoll results = 1;
}

// VariousDiceRolls
message VariousDiceRolls {
    repeated DiceRolls results = 1;
}

// DiceRollStats
message DiceRollStats {
    float average = 1;
    int32 high = 2;
    int32 low = 3;
    int32 sum = 4;
}

// MetaRoll
message MetaRoll {
    DiceRoll roll = 1;
    DiceRolls rolls = 2;
    DiceRollStats stats = 3;
}

// MetaRolls
message MetaRolls {
    repeated MetaRoll results = 1;
}

// VersionRequest ...
message VersionRequest {
    string data = 1;
}

// VersionReply ...
message VersionReply {
    string version = 1;
    string buildDate = 2;
    string gitCommit = 3;
    string gitBranch = 4;
    string gitSummary = 5;
}